{"version":3,"sources":["Util/API.js","Components/Grid/index.js","Components/Form/index.js","Components/List/index.js","Components/ActionButton/index.js","Components/Wrapper/index.js","Pages/Home.js","Components/Login/index.js","Components/SignupForm/index.js","Components/NavBar/index.js","Pages/intro.js","App.js","serviceWorker.js","index.js"],"names":["datam","API","Thesaurus","query","axios","get","Dictonary","Categories","InsAdj","InsNoun","getWords","saveWord","wordData","post","FindClass","url","method","headers","X-RapidAPI-Key","X-RapidAPI-Host","Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Form","props","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","event","handleFormSubmit","List","ListItem","ActionButton","Object","assign","Wrapper","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","TypeOf","word","state","class","filter","elem","index","categories","Ants","meta","ants","Syns","syns","elm","console","log","definition","shortdef","partOfSpeech","fl","firstLetter","charAt","lastLetter","length","Xletter","x","window","prompt","substring","vowelCount","m","match","letterCount","getRandomInt","max","Math","floor","random","getword","options","wordsToGuess","title","setState","search","words","searchWords","then","res","data","typeOf","moreOfWord","GetHelp","speech","response","slice","target","defineProperty","getData","childData","HandleGuess","preventDefault","str","userGuess","toLowerCase","trim","seconds","alert","componentDidMount","HandleActionButton","cb","array","indexOf","results","calls","toConsumableArray","hasGuessed","_this2","catch","err","interval","setInterval","tick","clearInterval","_this3","Components_ActionButton","Components_Form","Components_Wrapper","key","React","Component","Login","handleChange","username","password","redirectTo","handleSubmit","bind","assertThisInitialized","status","updateUser","loggedIn","error","Redirect","to","pathname","Fragment","SignupForm","confirmPassword","errmsg","NavBar","Link","logout","href","intro","require","Strategy","Response","handleClick","players","App","getUser","userObject","user","_this4","BrowserRouter","Components_NavBar","Switch","Route","exact","path","component","render","Components_Login","Components_SignupForm","signup","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2a12dd0.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASEURL = \"https://www.dictionaryapi.com/api/v3/references/thesaurus/json/\"\r\nconst BASEURL2 = \"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\"\r\nconst thesKEY = \"?key=28b56967-484b-45f5-9b85-17a8fabea4ae\";\r\nconst dictKEY = \"?key=9a6569a8-75ff-478f-83c3-f71060038a88\";\r\nconst datam = \"https://api.datamuse.com/words?rel_jjb=\"\r\nconst datam2 = \"https://api.datamuse.com/words?rel_jja=\"\r\nconst wordsapi = \"https://wordsapiv1.p.mashape.com/words/\"\r\n\r\n\r\nexport default {\r\n    Thesaurus: function (query) {\r\n        return axios.get(BASEURL + query + thesKEY);\r\n    },\r\n    Dictonary: function (query) {\r\n        return axios.get(BASEURL2 + query + dictKEY)\r\n    },\r\n    Categories: function (query) {\r\n        return axios.get(datam + query)\r\n    },\r\n    InsAdj: function (query) {\r\n        return axios.get(datam2 + query)\r\n    },\r\n    InsNoun: function (query) {\r\n        return axios.get(datam + query)\r\n    },\r\n    getWords: function () {\r\n        return axios.get(\"/api/saved\");\r\n    },\r\n    saveWord: function (wordData) {\r\n        return axios.post(\"/api/words\", wordData);\r\n    },\r\n    FindClass: function (query) {\r\n        return axios({\r\n            url: \"https://wordsapiv1.p.rapidapi.com/words/\"+ query + \"/typeOf\",\r\n            method: 'get',\r\n            headers: {\r\n                'X-RapidAPI-Key': 'f717eb135dmsh5cf690d2dcedf8fp1e873bjsnf904dfe7245b',\r\n                'X-RapidAPI-Host': 'wordsapiv1.p.rapidapi.com'\r\n            }\r\n        })\r\n        // .then(res => console.log(res.data))\r\n    }\r\n\r\n    };\r\n\r\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction Form(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Guess!</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name={props.name}\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"eneter word here\"\n          id=\"search\"\n        />\n        <br />\n        <button onClick={(event) => props.handleFormSubmit(event)} className=\"btn btn-primary\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group list-group-horizontal-md\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\nimport \"./style.css\"\nimport { Container } from \"../Grid\"\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction ActionButton(props) {\n  switch (props.type) {\n    case \"success\":\n      var a = \"btn btn-success button\"\n      break;\n    case \"danger\":\n      // eslint-disable-next-line no-redeclare\n      var a = \"btn btn-danger button\"\n      break;\n    default:\n      // eslint-disable-next-line no-redeclare\n      var a = \"btn btn-warning button\"\n  }\n  return (\n    <button type=\"button\" {...props} className={a} >{props.value}\n    </button>\n    \n\n  );\n}\n\nexport default ActionButton;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","// eslint-disable-next-line no-unused-vars\nimport React, { Component } from 'react';\nimport API from \"../Util/API\";\nimport { Container, Row, Col } from \"../Components/Grid\";\nimport Form from \"../Components/Form\";\nimport { List, ListItem } from \"../Components/List\"\nimport ActionButton from \"../Components/ActionButton\"\nimport Wrapper from \"../Components/Wrapper\";\n\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      categories: [],\n      class: [],\n      calls: [],\n      word: {},\n      moreOfWord: {},\n      results: {},\n      userGuess: \"\",\n      hasGuessed: false,\n      seconds: 0,\n      wordsToGuess:[],\n      words:[]\n    };\n  }\n  tick() {\n    this.setState(state => ({\n      seconds: state.seconds + 1\n    }));\n  }\n  TypeOf = (word) => { return this.state.class.filter((elem, index) => index <= 5).join(' ') }\n  Categories = (word) => { return this.state.categories.map(elem => elem.word).join(' ') }\n  Ants = (word) => { return this.state.word.meta.ants[0] }\n  Syns = (word) => { if (this.state.word.meta.syns) {return this.state.word.meta.syns[0].filter((elm, index)  => index <= 5).join(\" \")}\n  else{( console.log(\"no syns\")) }}\n  definition = (word) => { return this.state.word.shortdef }\n  partOfSpeech = (word) => { return this.state.word.fl }\n  firstLetter = (word) => word.charAt(0)\n  lastLetter = (word) => word[word.length - 1]\n  Xletter = (word) => { let x = window.prompt(\"Find the  __ letter\"); return word.substring(x - 1, x) }\n  vowelCount = (word) => {\n    let m = word.match(/[aeiou]/gi);\n    if (m === null) { return \"0\" }\n    else { return (m.length) }\n  }\n  letterCount = (word) => word.length\n\n\n  componentDidMount() {\n    API.getWords().then(res => this.setState({\n      wordsToGuess: res.data\n  })).catch(err => console.log(err))\n         this.interval = setInterval(() => this.tick(), 1000);\n        \n        }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n   getRandomInt=(max)=> {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  getword = () => {\n    let x = this.getRandomInt(10)\n    let options = this.state.wordsToGuess.map( elem => elem.title)\n    this.setState({\n      search:options[x],\n      words:options\n    })\n    this.searchWords(options[x])\n    console.log(options)\n    console.log(x)\n  }\n\n  searchWords = (query) => {\n    API.FindClass(query).then((res) => this.setState({ class: res.data.typeOf }));\n    API.Thesaurus(query).then((res) => this.setState({ word: res.data[0] }));\n    API.Dictonary(query).then((res) => this.setState({ moreOfWord: res.data[0] }))\n      .then(this.GetHelp(this.state.word.fl, this.state.search))\n  }\n\n  GetHelp = (speech, query) => {\n    switch (speech) {\n      case \"noun\":\n        console.log(this.state.wordsToGuess)\n        API.InsNoun(query).then((response) => {\n          let categories = (response.data.slice(0, 6))\n          this.setState({\n            categories: categories\n          })\n        });;\n        break;\n      case \"adjective\":\n        console.log(\"Adj\")\n        API.InsAdj(query).then((response) => {\n          let categories = (response.data.slice(0, 6))\n          this.setState({\n            categories: categories\n          })\n        });;\n        break;\n      default:\n        console.log(\"??\")\n        break;\n    }\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getData = (childData) => {\n    console.log(childData)\n  }\n\n  HandleGuess = (event) => {\n    event.preventDefault();\n    this.getword();\n    console.log(this.state.search)\n    this.setState({\n      value: event.target.value\n    });\n    let str = this.state.userGuess.toLowerCase().trim()\n    console.log(str);\n    if (str &&str === this.state.search) {\n      //  alert(\"you WIN!\")\n      console.log(\"You win!\")\n      console.log(this.state.seconds)\n      alert(\"You got it!, your time was \" + this.state.seconds)\n      this.componentDidMount()\n    }\n    else{\n      console.log(\"loaded\")\n    }\n  }\n\n\n  HandleActionButton = (cb, value, array) => {\n    if (array.indexOf(value) === -1) {\n      let results = cb(this.state.search)\n      this.setState({\n        calls: [...this.state.calls, value, results]\n      })\n    }\n    else {\n      console.log(\"Try a different button\")\n    }\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-4\">\n            <ActionButton\n              type=\"success\"\n              value={\"Letter Count\"}\n              onClick={() => this.HandleActionButton(this.letterCount, \"Letter Count\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              type=\"success\"\n              value={\"Part of Speech\"}\n              onClick={() => this.HandleActionButton(this.partOfSpeech, \"Part of Speech\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              type=\"success\"\n              value={\"First Letter\"}\n              onClick={() => this.HandleActionButton(this.firstLetter, \"First Letter\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              type=\"success\"\n              value={\"Last Letter\"}\n              onClick={() => this.HandleActionButton(this.lastLetter, \"Last Letter\", this.state.calls)}>\n            </ActionButton>\n          </Col>\n          <Col size=\"md-4\">\n            <ActionButton\n              type=\"success\"\n              value={\"X Letter\"}\n              onClick={() => this.HandleActionButton(this.Xletter, \"X letter\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              type=\"success\"\n              value={\"Vowel Count\"}\n              onClick={() => this.HandleActionButton(this.vowelCount, \"Vowel Count\", this.state.calls)}>\n            </ActionButton>\n          </Col>\n          <Col size=\"md-4\">\n          <Form\n                value={this.state.userGuess}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.HandleGuess}\n                name={\"userGuess\"}\n\n              ></Form>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col size=\"md-6\">\n            <ActionButton\n              type={\"danger\"}\n              value={\"Definition\"}\n              onClick={() => this.HandleActionButton(this.definition, \"Definition\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              type={\"danger\"}\n              value={\"Syns\"}\n              onClick={() => this.HandleActionButton(this.Syns, \"Syns\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              type={\"danger\"}\n              value={\"Ants\"}\n              onClick={() => this.HandleActionButton(this.Ants, \"Ants\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              value={\"Type of\"}\n              onClick={() => this.HandleActionButton(this.TypeOf, \"Type Of\", this.state.calls)}>\n            </ActionButton>\n            <ActionButton\n              value={\"Categories\"}\n              onClick={() => this.HandleActionButton(this.Categories, \"Categories\", this.state.calls)}>\n            </ActionButton>\n\n          </Col>\n        </Row>\n\n        <Wrapper>\n          {this.state.calls.length && this.state.search ? (\n\n            <List>\n              {this.state.calls.map((call) =>\n                (\n                  <ListItem key={call}>{call}\n                  </ListItem>\n                ))}\n            </List>\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n          <List>\n\n          </List>\n        </Wrapper>\n      </Container>\n    );\n  }\n}\nexport default Home;\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react'\r\nimport { Container, Row, Col } from \"../Grid\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\nclass Login extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            redirectTo: null\r\n\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        console.log('handleSubmit')\r\n        axios\r\n            .post('/user/login', {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n            .then(response => {\r\n                console.log('login response: ')\r\n                console.log(response)\r\n                if (response.status === 200) {\r\n                    // update App.js state\r\n                    this.props.updateUser({\r\n                        loggedIn: true,\r\n                        username: response.data.username\r\n                    })\r\n                    // update the state to redirect to home\r\n                    this.setState({\r\n                        redirectTo: '/home'\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                console.log('login error: ')\r\n                console.log(error);\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectTo) {\r\n            return <Redirect to={{ pathname: this.state.redirectTo }} />\r\n        } else {\r\n            return (\r\n                <>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleChange}\r\n                            name=\"username\"\r\n                            placeholder=\"Enter username\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            name=\"password\" \r\n                            placeholder=\"Password\" />\r\n                    </div>\r\n                    <div className=\"form-group form-check\">\r\n                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                        <label className=\"form-check-label\" >Check me out</label>\r\n                    </div>\r\n                    <button type=\"submit\" onClick={this.handleSubmit}\r\n                        className=\"btn btn-primary\">Submit</button>\r\n\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\n\nclass SignupForm extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: '',\n\n\t\t}\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t}\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n\t}\n\thandleSubmit(event) {\n\t\tevent.preventDefault()\n\t\tconsole.log('sign-up-form, username: ');\n\t\tconsole.log(this.state.username);\n\t\t//request to server here\n\t\taxios.post('/user/', {\n\t\t\tusername: this.state.username,\n\t\t\tpassword: this.state.password\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tif (!response.data.errmsg) {\n\t\t\t\t\tconsole.log('successful signup')\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tredirectTo: '/login'\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('username already taken')\n\t\t\t\t}\n\t\t\t})\n\n\t}\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"SignupForm\">\n\t\t\t<h1>Signup form</h1>\n\t\t\t<label htmlFor=\"username\">Username: </label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"username\"\n\t\t\t\tvalue={this.state.username}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"password\">Password: </label>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tname=\"password\"\n\t\t\t\tvalue={this.state.password}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"confirmPassword\">Confirm Password: </label>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tname=\"confirmPassword\"\n\t\t\t\tvalue={this.state.confirmPassword}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t/>\n\t\t\t<button onClick={this.handleSubmit}>Sign up</button>\n\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default SignupForm\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nfunction NavBar(props) {\r\n  if (props.loggedIn) {\r\n\t\treturn (\r\n\t\t\t<nav className=\"navbar\">\r\n\t\t\t\t<ul className=\"nav\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"nav-link\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"#\" className=\"nav-link\" onClick={props.logout}>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t} else {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a className=\"navbar-brand\" href=\"/home\">\r\n      Home\r\n    </a>\r\n    <a className=\"navbar-brand\" href=\"/\">\r\n      Change User\r\n    </a>\r\n    <span>Hello {props.name}!</span>\r\n  </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport SignupForm from \"../Components/SignupForm\"\r\nimport Login from \"../Components/Login\"\r\nimport { Col, Row, Container } from \"../Components/Grid\";\r\nimport Form from \"../Components/Form\";\r\nvar passport = require('passport')\r\n    , LocalStrategy = require('passport-local').Strategy;\r\n\r\n\r\nclass intro extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            search: '',\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n    handleInputChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.username, this.state.password)\r\n        event.preventDefault();\r\n        axios.post(\"/user/login\", {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }).then(res => {\r\n            console.log(res)\r\n            if (Response.data) {\r\n                console.log(\"success\")\r\n            }\r\n            else {\r\n                console.log(\"error\")\r\n            }\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    handleClick = (players) => {\r\n        // this.setState({ })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">Guess WHAT?</h1>\r\n                    <p className=\"lead\">Login or Sign-up!</p>\r\n                </div>\r\n            </div>\r\n            <a href= \"/login\" className=\"btn btn-primary btn-lg btn-block\"> <span className=\"text-secondary\">Login</span></a>\r\n            <a href= \"/sign-up\" className=\"btn btn-secondary btn-lg btn-block\"> <span className=\"text-primary\">Sign-up</span></a>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default intro;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Pages/Home\";\nimport Login from \"./Components/Login\"\nimport SignupForm from \"./Components/SignupForm\"\nimport Navbar from \"./Components/NavBar\"\nimport intro from \"./Pages/intro\";\nimport axios from 'axios'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      username: null\n    }\n\n    this.getUser = this.getUser.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n  }\n  componentDidMount() {\n    this.getUser()\n\n  }\n\n  updateUser(userObject) {\n    this.setState(userObject)\n  }\n\n  _logout(event) {\n\t\tevent.preventDefault()\n\t\tconsole.log('logging out')\n\t\taxios.post('/auth/logout').then(response => {\n\t\t\tconsole.log(response.data)\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloggedIn: false,\n\t\t\t\t\tuser: null\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n  getUser() {\n    axios.get('/user/').then(response => {\n      console.log('Get user response: ')\n      console.log(response.data)\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ')\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        })\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar\n          name={this.state.username}\n          />\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/\" component={intro} />\n            <Route exact path=\"/sign-up\"component={SignupForm}/>\n            <Route path=\"/login\" render={() => \n                <Login\n              updateUser={this.updateUser}\n             />}/>\n            <Route path=\"/signup\" render={() => \n              <SignupForm\n                signup={this.signup}\n             />}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}